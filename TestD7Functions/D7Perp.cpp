#include "stdafx.h"

#include "D7Perp.h"

void D7perp1(const double d[], double dd[]) {
   /*prj_perp[D7P_1]   1 */
   dd[0] = 0.6428571428571429*d[0] - 0.3571428571428572*d[1] + 0.1428571428571428*d[2] + 0.1428571428571428*d[3] - 0.1428571428571428*d[4] - 0.1428571428571428*d[5] - 0.1428571428571428*d[6];
   dd[1] = -0.3571428571428572*d[0] + 0.6428571428571429*d[1] + 0.1428571428571428*d[2] + 0.1428571428571428*d[3] - 0.1428571428571428*d[4] - 0.1428571428571428*d[5] - 0.1428571428571428*d[6];
   dd[2] = 0.1428571428571428*d[0] + 0.1428571428571428*d[1] + 0.1428571428571428*d[2] + 0.1428571428571428*d[3] - 0.1428571428571428*d[4] - 0.1428571428571428*d[5] - 0.1428571428571428*d[6];
   dd[3] = 0.1428571428571428*d[0] + 0.1428571428571428*d[1] + 0.1428571428571428*d[2] + 0.1428571428571428*d[3] - 0.1428571428571428*d[4] - 0.1428571428571428*d[5] - 0.1428571428571428*d[6];
   dd[4] = -0.1428571428571428*d[0] - 0.1428571428571428*d[1] - 0.1428571428571428*d[2] - 0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
   dd[5] = -0.1428571428571428*d[0] - 0.1428571428571428*d[1] - 0.1428571428571428*d[2] - 0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
   dd[6] = -0.1428571428571428*d[0] - 0.1428571428571428*d[1] - 0.1428571428571428*d[2] - 0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
}

void D7perp2(const double d[], double dd[]) {
   /*prj_perp[D7P_2]   2 */
   dd[0] = 0.1428571428571428*d[0] + 0.1428571428571428*d[1] + 0.1428571428571428*d[2] + 0.1428571428571428*d[3] - 0.1428571428571428*d[4] - 0.1428571428571428*d[5] - 0.1428571428571428*d[6];
   dd[1] = 0.1428571428571428*d[0] + 0.6428571428571429*d[1] - 0.3571428571428572*d[2] + 0.1428571428571428*d[3] - 0.1428571428571428*d[4] - 0.1428571428571428*d[5] - 0.1428571428571428*d[6];
   dd[2] = 0.1428571428571428*d[0] - 0.3571428571428572*d[1] + 0.6428571428571429*d[2] + 0.1428571428571428*d[3] - 0.1428571428571428*d[4] - 0.1428571428571428*d[5] - 0.1428571428571428*d[6];
   dd[3] = 0.1428571428571428*d[0] + 0.1428571428571428*d[1] + 0.1428571428571428*d[2] + 0.1428571428571428*d[3] - 0.1428571428571428*d[4] - 0.1428571428571428*d[5] - 0.1428571428571428*d[6];
   dd[4] = -0.1428571428571428*d[0] - 0.1428571428571428*d[1] - 0.1428571428571428*d[2] - 0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
   dd[5] = -0.1428571428571428*d[0] - 0.1428571428571428*d[1] - 0.1428571428571428*d[2] - 0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
   dd[6] = -0.1428571428571428*d[0] - 0.1428571428571428*d[1] - 0.1428571428571428*d[2] - 0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
}


void D7perp3(const double d[], double dd[]) {
   /*prj_perp[D7P_3]3*/
dd[0] = 0.1428571428571428*d[0] + 0.1428571428571428*d[1] + 0.1428571428571428*d[2] + 0.1428571428571428*d[3] + -0.1428571428571428*d[4] + -0.1428571428571428*d[5] + -0.1428571428571428*d[6];
dd[1] = 0.1428571428571428*d[0] + 0.1428571428571428*d[1] + 0.1428571428571428*d[2] + 0.1428571428571428*d[3] + -0.1428571428571428*d[4] + -0.1428571428571428*d[5] + -0.1428571428571428*d[6];
dd[2] = 0.1428571428571428*d[0] + 0.1428571428571428*d[1] + 0.6428571428571429*d[2] + -0.3571428571428572*d[3] + -0.1428571428571428*d[4] + -0.1428571428571428*d[5] + -0.1428571428571428*d[6];
dd[3] = 0.1428571428571428*d[0] + 0.1428571428571428*d[1] + -0.3571428571428572*d[2] + 0.6428571428571429*d[3] + -0.1428571428571428*d[4] + -0.1428571428571428*d[5] + -0.1428571428571428*d[6];
dd[4] = -0.1428571428571428*d[0] + -0.1428571428571428*d[1] + -0.1428571428571428*d[2] + -0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
dd[5] = -0.1428571428571428*d[0] + -0.1428571428571428*d[1] + -0.1428571428571428*d[2] + -0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
dd[6] = -0.1428571428571428*d[0] + -0.1428571428571428*d[1] + -0.1428571428571428*d[2] + -0.1428571428571428*d[3] + 0.1428571428571428*d[4] + 0.1428571428571428*d[5] + 0.1428571428571428*d[6];
}

void D7perp4(const double d[], double dd[]) {
   /*prj_perp[D7P_4]4*/
dd[0] = 0.25*d[0] + 0.25*d[3] + -0.25*d[5] + -0.25*d[6];
dd[1] = 0.3333333333333333*d[1] + 0.3333333333333333*d[2] + -0.3333333333333333*d[4];
dd[2] = 0.3333333333333333*d[1] + 0.3333333333333333*d[2] + -0.3333333333333333*d[4];
dd[3] = 0.25*d[0] +0.25*d[3] + -0.25*d[5] + -0.25*d[6];
dd[4] = -0.3333333333333333*d[1] + -0.3333333333333333*d[2] + 0.3333333333333333*d[4];
dd[5] = -0.25*d[0] -0.25*d[3] + 0.25*d[5] + 0.25*d[6];
dd[6] = -0.25*d[0] -0.25*d[3] + 0.25*d[5] + 0.25*d[6];
}

void D7perp5(const double d[], double dd[]) {
   /*prj_perp[D7P_5]5*/
   dd[0] = 0.3333333333333333*d[0] + 0.3333333333333333*d[3] + -0.3333333333333333*d[4];
   dd[1] = 0.25*d[1] + 0.25*d[2] + -0.25*d[5] + -0.25*d[6];
   dd[2] = 0.25*d[1] + 0.25*d[2] + -0.25*d[5] + -0.25*d[6];
   dd[3] = 0.3333333333333333*d[0] + 0.3333333333333333*d[3] + -0.3333333333333333*d[4];
   dd[4] = -0.3333333333333333*d[0] + -0.3333333333333333*d[3] + 0.3333333333333333*d[4];
   dd[5] = -0.25*d[1] + -0.25*d[2] + 0.25*d[5] + 0.25*d[6];
   dd[6] = -0.25*d[1] + -0.25*d[2] + 0.25*d[5] + 0.25*d[6];
}

void D7perp6(const double d[], double dd[]) {
   /*prj_perp[D7P_6]6*/
dd[0] = 0.3333333333333333*d[0] + 0.3333333333333333*d[2] + -0.3333333333333333*d[5];
dd[1] = 0.25*d[1] + 0.25*d[3] + -0.25*d[4] + -0.25*d[6];
dd[2] = 0.3333333333333333*d[0] + 0.3333333333333333*d[2] + -0.3333333333333333*d[5];
dd[3] = 0.25*d[1] + 0.25*d[3] + -0.25*d[4] + -0.25*d[6];
dd[4] = -0.25*d[1] + -0.25*d[3] + 0.25*d[4] + 0.25*d[6];
dd[5] = -0.3333333333333333*d[0] + -0.3333333333333333*d[2] + 0.3333333333333333*d[5];
dd[6] = -0.25*d[1] + -0.25*d[3] + 0.25*d[4] + 0.25*d[6];
}

void D7perp7(const double d[], double dd[]) {
   /*prj_perp[D7P_7]7*/
dd[0] = 0.25*d[0] + 0.25*d[2] + -0.25*d[4] + -0.25*d[6];
dd[1] = 0.3333333333333333*d[1] + 0.3333333333333333*d[3] + -0.3333333333333333*d[5];
dd[2] = 0.25*d[0] + 0.25*d[2] + -0.25*d[4] + -0.25*d[6];
dd[3] = 0.3333333333333333*d[1] + 0.3333333333333333*d[3] + -0.3333333333333333*d[5];
dd[4] = -0.25*d[0] + -0.25*d[2] + 0.25*d[4] + 0.25*d[6];
dd[5] = -0.3333333333333333*d[1] + -0.3333333333333333*d[3] + 0.3333333333333333*d[5];
dd[6] = -0.25*d[0] + -0.25*d[2] + 0.25*d[4] + 0.25*d[6];
}

void D7perp8(const double d[], double dd[]) {
   /*prj_perp[D7P_8]8*/
dd[0] = 0.3333333333333333*d[0] + 0.3333333333333333*d[1] + -0.3333333333333333*d[6];
dd[1] = 0.3333333333333333*d[0] + 0.3333333333333333*d[1] + -0.3333333333333333*d[6];
dd[2] = 0.25*d[2] + 0.25*d[3] + -0.25*d[4] + -0.25*d[5];
dd[3] = 0.25*d[2] + 0.25*d[3] + -0.25*d[4] + -0.25*d[5];
dd[4] = -0.25*d[2] + -0.25*d[3] + 0.25*d[4] + 0.25*d[5];
dd[5] = -0.25*d[2] + -0.25*d[3] + 0.25*d[4] + 0.25*d[5];
dd[6] = -0.3333333333333333*d[0] + -0.3333333333333333*d[1] + 0.3333333333333333*d[6];
}

void D7perp9(const double d[], double dd[]) {
   /*prj_perp[D7P_9]9*/
dd[0] = 0.25*d[0] + 0.25*d[1] -0.25*d[4] + -0.25*d[5];
dd[1] = 0.25*d[0] + 0.25*d[1] -0.25*d[4] + -0.25*d[5];
dd[2] = 0.3333333333333333*d[2] + 0.3333333333333333*d[3] + -0.3333333333333333*d[6];
dd[3] = 0.3333333333333333*d[2] + 0.3333333333333333*d[3] + -0.3333333333333333*d[6];
dd[4] = -0.25*d[0] + -0.25*d[1] + 0.25*d[4] + 0.25*d[5];
dd[5] = -0.25*d[0] + -0.25*d[1] + 0.25*d[4] + 0.25*d[5];
dd[6] = -0.3333333333333333*d[2] + -0.3333333333333333*d[3] + 0.3333333333333333*d[6];
}

std::vector< void(*)(const double[], double[])> GetPerpFunctions() {
   std::vector< void(*)(const double[], double[])> v;
   v.push_back(D7perp1);
   v.push_back(D7perp2);
   v.push_back(D7perp3);
   v.push_back(D7perp4);
   v.push_back(D7perp5);
   v.push_back(D7perp6);
   v.push_back(D7perp7);
   v.push_back(D7perp8);
   v.push_back(D7perp9);
   return v;
}
